@page "/fetchmanagerblogdetails"
@using BlazorApp.DBFirst.Shared.Models
@using BlazorApp.DBFirst.Shared.Utilities
@inject HttpClient Http

<h1>Blog List</h1>
<div class="row">
    <div class="col-md-6">
        <a href='/managerblog/add' class="btn btn-primary" role="button">
            <i class="fas fa-user-plus"></i>
            Add Blog
        </a>
    </div>
   @* <div class="input-group col">
        <input type="text" class="form-control" placeholder="Search user by name"
        @bind="SearchString" @bind:event="oninput" @onkeyup="FilterUser"/>
        
        @if (SearchString.Length > 0)
        {
            <div class="input-group-append">
                <button class="btn btn-danger" @onclick="ResetSearch">
                    <i class="fas fa-times"></i>
                </button>
            </div>
        }
    </div>*@
</div>
<br/>

@if(blogList == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table table-striped align-middle table-bordered">
        <thead class="table-success">
            <tr>                
                <th>Title</th>
                <th>Created On</th>
                <th>Post</th>
                <th>Published Date</th>
                <th>Status</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var blog in blogList)
            {
                <tr>                   
                    <td>@blog.Title</td>
                    <td>@blog.CreationDate.ToString("dd-MM-yyyy")</td>
                    <td>@(Utility.TruncateString(blog.PostBody,25))</td> 
                    <td>@blog.PublishedDate.ToString("dd-MM-yyyy")</td>
                    <td>@(blog.Status ?"Active":"In Active") </td>
                     <td>
                         @if(!@blog.Status)
                         {
                             <a href='/managerblog/edit/@blog.Blogid' class="btn btn-outline-dark" role="button">Edit</a> <span> </span>
                         }                        
                         <a href='/managerblog/delete/@blog.Blogid' class="btn btn-outline-danger" role="button">Delete</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}


@code {
    protected List<Blog>? blogList = new();


    protected override async Task OnInitializedAsync()
    {
        await GetBlogList();
    }
    
    protected async Task GetBlogList() =>  
        blogList = await Http.GetFromJsonAsync<List<Blog>>("api/Blog");
        
}
