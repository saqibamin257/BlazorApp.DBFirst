@page "/managerblog/add"
@page "/managerblog/edit/{blogId:int}"
@using BlazorApp.DBFirst.Shared.Models
@inject HttpClient Http
@inject NavigationManager NavigationManager
<h1>@Title Blog</h1>

<hr />

<EditForm Model="@blog" OnValidSubmit="SaveBlog">
    <DataAnnotationsValidator />
    <div class="mb-3">
        <label for="Title" class="form-label">Title</label>
        <div class="col-md-4">
            <InputText class="form-control" @bind-Value="blog.Title" />
        </div>
        <ValidationMessage For="@(() => blog.Title)" />
    </div>
    <div class="mb-3">
        <label for="CreationDate" class="form-label">CreationDate</label>
        <div class="col-md-4">
            <InputDate class="form-control" @bind-Value="blog.CreationDate"  />
        </div>
        <ValidationMessage For="@(() => blog.CreationDate)" />
    </div>
    <div class="mb-3">
        <label for="PostBody" class="form-label">PostBody</label>
        <div class="col-md-4">
            <InputTextArea class="form-control" @bind-Value="blog.PostBody" />
        </div>
        <ValidationMessage For="@(() => blog.PostBody)" />
    </div>
    <div class="mb-3">
        <label for="PublishedDate" class="form-label">PublishedDate</label>
        <div class="col-md-4">
            <InputDate class="form-control" @bind-Value="blog.PublishedDate" @bind-Value:format="dd-MM-yyyy" />
        </div>
        <ValidationMessage For="@(() => blog.PublishedDate)" />
    </div>
    <div>
        <label>
            Status:
            <InputCheckbox @bind-Value="blog.Status"/>                    
        </label>
    </div>



    <div class="form-group">
        <button type="submit" class="btn btn-primary">Save</button>
        <button class="btn btn-light" @onclick="Cancel">Cancel</button>        
    </div>  
   
</EditForm>



@code {
    [Parameter]
    public int blogId { get; set; }

    protected string Title = "Add"; 


    protected Blog blog = new();
    protected override async Task OnParametersSetAsync()
    {
        if (blogId !=0 )
        {
            Title="Edit";
            blog = await Http.GetFromJsonAsync<Blog>($"api/Blog/{blogId}");
        }
    }
    protected async Task SaveBlog()
    {
        if (blog.Blogid !=0)
        {
            await Http.PutAsJsonAsync("api/Blog",blog);
        }
        else
        {
            await Http.PostAsJsonAsync("api/Blog", blog);
        }
        Cancel();
    }
    public void Cancel()
    {
        NavigationManager.NavigateTo("/fetchmanagerblogdetails");
    }
}
